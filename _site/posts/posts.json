[
  {
    "path": "posts/2022-05-09-week-19/",
    "title": "week-19",
    "description": "Exploring friendly packages to create tables (including interactive) in R",
    "author": [
      {
        "name": "Oumarou Diallo",
        "url": {}
      }
    ],
    "date": "2022-05-09",
    "categories": [],
    "contents": "\nDistill is a publication format for scientific and technical writing,\nnative to the web.\nLearn more about using Distill at https://rstudio.github.io/distill.\n\n\n\n",
    "preview": {},
    "last_modified": "2022-05-09T22:02:27-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-04-14-week-15/",
    "title": "week-15: Indoor Air Pollution",
    "description": "Exploring share of deaths from indoor air pollution in Africa.",
    "author": [
      {
        "name": "Oumarou Diallo",
        "url": {}
      }
    ],
    "date": "2022-04-14",
    "categories": [],
    "contents": "\n\nContents\nSetup & Libraries\nDatasets\nLoading\nExploring and wrangling\nFinal output\n\nPlotting\nCorrelation GDP -\nAccess to Fuels + Tech\nIndoor air pollution\n\n\nSetup & Libraries\n\n\nknitr::opts_chunk$set(echo = TRUE)\n\n#if (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  tidytuesdayR, tidyverse, janitor, scales, rmarkdown, ggrepel,\n  ggthemes, MetBrewer, showtext, ggtext, patchwork, usefunc,\n  sf, afrilearndata, sysfonts\n  )\n\nfont_add_google(\"Noto Serif\") \nfont_add_google(\"Quicksand\")\nfont_add_google(\"Fira Sans Condensed\")\nfont_add_google('Roboto', 'Roboto')\n\nshowtext_auto()\n\n\n\nDatasets\nThis week, we have 6 datasets to play with. I explored them all but\nended up focusing on 2: the fuel_gdp and indoor_pollution.\nSmall issues with both datasets: - Some have very long names to work\nwith (needed renaming) - For the fuel_gdp df, continent column has many\nmissing (luckily easily fixable)\nLoading\n\n\ntt <- tt_load('2022-04-12')\n\n\n\n    Downloading file 1 of 6: `fuel_gdp.csv`\n    Downloading file 2 of 6: `fuel_access.csv`\n    Downloading file 3 of 6: `death_timeseries.csv`\n    Downloading file 4 of 6: `death_source.csv`\n    Downloading file 5 of 6: `death_fuel.csv`\n    Downloading file 6 of 6: `indoor_pollution.csv`\n\nExploring and wrangling\n\n\n# Fuel_gdp \n\nfg <- tt$fuel_gdp %>% \n  clean_names() %>% \n  select(\n    year,\n    country = entity,\n    pct     = access_to_clean_fuels_and_technologies_for_cooking_percent_of_population,\n    gdp     = gdp_per_capita_ppp_constant_2017_international,\n    pop     = population_historical_estimates,\n    continent\n    ) \nfuel_gdp <- fg %>% \n  mutate(continent2 = case_when(\n    country %in% {fg %>% filter(continent == 'Asia') %>% \n        select(country) %>% pull()} ~ 'Asia',\n    country %in% {fg %>% filter(continent == 'Europe') %>% \n        select(country) %>% pull()} ~ 'Europe',\n    country %in% {fg %>% filter(continent == 'Africa') %>% \n        select(country) %>% pull()} ~ 'Africa',\n    country %in% {fg %>% filter(continent == 'Antarctica') %>% \n        select(country) %>% pull()} ~ 'Antarctica',\n    country %in% {fg %>% filter(continent == 'North America') %>% \n        select(country) %>% pull()} ~ 'North America',\n    country %in% {fg %>% filter(continent == 'Oceania') %>% \n        select(country) %>% pull()} ~ 'Oceania',\n    country %in% {fg %>% filter(continent == 'South America') %>% \n        select(country) %>% pull()} ~ 'South America')\n    ) %>% \n  filter(\n    !is.na(continent2),\n    !is.na(pct)\n    ) %>% \n  select(-continent) %>% \n  rename(continent = continent2)   # I hope to find a better/faster way to do this\n\n\n# Indoor_pollution\n\nind_pollution <- tt$indoor_pollution %>% \n  clean_names() %>%\n  rename(\n    country = entity,\n    deaths  = deaths_cause_all_causes_risk_household_air_pollution_from_solid_fuels_sex_both_age_age_standardized_percent)\n\n\n\nFinal output\n\n\npaged_table(fuel_gdp)\n\n\n\n\n\n\n\npaged_table(ind_pollution)\n\n\n\n\n\nPlotting\nCorrelation GDP - Access\nto Fuels + Tech\n\n\np1 <- fuel_gdp %>% \n  filter(\n    year      == 2015,\n    continent == 'Africa', \n    !is.na(gdp)\n    ) %>% \n  ggplot(aes(gdp, pct/100))+\n  geom_point() + \n  geom_smooth(method = 'lm', fill = 'brown', alpha = .2)+\n  geom_text_repel(\n    aes(label = country), \n    segment.colour = NA)+\n  scale_size_binned(range = c(1, 10))+\n  scale_x_log10(labels = dollar)+\n  scale_y_continuous(labels = percent) +\n  theme_light()+\n  labs( x        = 'GDP per capita',\n        y        = 'Percentage',\n        title    = 'Access to clean fuels & technologies for cooking in Africa',\n        subtitle = 'GDP per capita vs. Population population with access in 2015')+\n  theme(plot.title    = element_text(size = 20, face = 'bold', family = 'Noto Serif'),\n        plot.subtitle = element_text(size = 12, face = 'bold', family = 'Quicksand'),\n        axis.title    = element_text(size = 12, face = 'bold'),\n        axis.text     = element_text(size = 10, face = 'bold'),\n        panel.grid    = element_blank())\n\n\n\nIndoor air pollution\nFor this plot, I used the afrimapr data to plot the African continent\nwith most up-to-date borders :) To learn more => afrimapr\n\n\ndata(africountries)\nafrica_data <- africountries %>% \n  dplyr::select(1, 6, 7, 8) %>% \n  rename(code = iso_a3) %>% \n  left_join(ind_pollution) %>% \n  dplyr::select(1,2,3,5,6,7,4) %>% \n  mutate(deaths = round(deaths, digits = 0))\n\n# additional data prep for the legend\nafrica_data$deaths_cat <- cut(\n  africa_data$deaths , \n  breaks         =c(0, 3, 6, 9, 12, 15, Inf), \n  labels         =c('0  -  3', '4  -  6', '7  -  9', '10-12', '13-15', '16-18'), \n  include.lowest = TRUE )\n\n# countries with higher percentage in 2019\ncountries_list <- c('NER', 'BFA', 'TCD', 'ETH', 'MDG', 'COD', 'SOM', 'GIN')\n\n\n# Plot title + subtitle \n# usefunc by [Nicola Rennie](https://twitter.com/nrennie35) is very handy for long text\n\nmysubtitle <- str_wrap_break(\"Niger, Somalia, Chad, Congo D., Burkina Faso, Ethiopia & Guinea still have high share of deaths from indoor air pollution (>= 13%) in 2019\\n\\n\", 70)\nmycaption <- \"W15 | Data: Our World in Data | #TidyTuesdayR\"\n\n\n# Another favorite package for theme+colors [metBrewer](https://github.com/BlakeRMills/MetBrewer)\n\np2 <- africa_data %>% \n  mutate(lab = case_when(code %in% countries_list ~ name,\n                         TRUE ~ '')) %>% \n  filter(year %in% c(1990, 2000, 2010, 2019)) %>% \n  ggplot(aes(fill = deaths_cat)) +\n  geom_sf(color = 'black', size = 0.05) +\n  geom_sf_text(aes(label = lab), \n               color = 'white',\n               size  = 3) +  \n  facet_wrap(~year) +\n  theme_map() +\n  scale_fill_manual( \n    values=met.brewer(\"Tam\", 8)[c(1, 2, 4, 5, 6, 7)], \n    name='', \n    guide = guide_legend(\n      keywidth       =unit(6, units = 'mm'),\n      keyheight      =unit(2, units = 'mm'),\n      label.position = 'left', \n      title.position = 'top', \n      label.hjust    = -.01,\n      ncol           =1)\n  ) +\n  plot_annotation(\n    title    = 'INDOOR AIR POLLUTION',\n    subtitle = mysubtitle,\n    caption  = mycaption) &\n  theme(\n    text              = element_text(color = 'white'),\n    legend.position   = c(0, 0),\n    legend.background = element_rect(fill = NA, color = NA),\n    legend.text       = element_text(face = 'bold', size = 12), \n    plot.margin       = margin(rep(4, 4)),\n    strip.text        = element_text(face = 'bold', size = 20, color = 'white'),\n    strip.background  = element_rect(fill = NA, color = NA),\n    plot.background   = element_rect(fill  = met.brewer(\"Isfahan2\")[5], color = NA), \n    panel.background  = element_rect(fill = met.brewer(\"Isfahan2\")[5], color = NA),\n    plot.title = element_text(family = \"Fira Sans Condensed\", face = \"bold\", hjust = 0.5, \n                              size = 24, color = \"wheat\", margin = margin(b = 10)),\n    plot.subtitle = element_text(family = \"Roboto\", hjust = 0.5, \n                                 size = 12, color = \"wheat\"),\n    plot.caption = element_text(hjust = .5, face = 'italic')\n    )\n\n\n\n\n\n\n",
    "preview": "posts/2022-04-14-week-15/w15_indoor_air_pol.png",
    "last_modified": "2022-04-15T00:42:23-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-04-07-week-14/",
    "title": "week-14: Digital publications",
    "description": "Exploring US digital news organisations.",
    "author": [
      {
        "name": "Oumarou Diallo",
        "url": {}
      }
    ],
    "date": "2022-04-07",
    "categories": [],
    "contents": "\n\nContents\nSetup & Libraries\nDataset\nLoading\nExploring and wrangling\nPublication by state\nHex map data\nFinal output\n\nPlotting\n\nSetup & Libraries\n\n\nknitr::opts_chunk$set(echo = TRUE)\n\n#if (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n  tidytuesdayR, tidyverse, janitor, here, scales, ggthemes, broom, rmarkdown,\n  mapdata, geojsonio, rgdal, gpclib, rgeos,\n  viridis, showtext)\n\nfont_add_google('Roboto', 'Roboto')\nshowtext_auto()\nmpal <- rev(magma(10))[c(-1,-12)]\n\n\n\nDataset\nLoading\n\n\ntt <- tt_load('2022-04-05')\n\n\n\n    Downloading file 1 of 1: `news_orgs.csv`\n\nExploring and wrangling\n\n\nd <- tt$news_orgs %>% \n  filter(country == 'United States') %>%                 # keep only US org\n  select(publication_name, owner, city, state, \n         primary_language, tax_status_current,\n         year_founded) %>%                               # Select cols of interets\n  filter(!is.na(primary_language)) %>% \n  mutate(primary_language = case_when(\n    primary_language == 'Bilingual (Spanish & English)' ~ 'Bilingual',\n    primary_language == 'Spanish, English' ~ 'Bilingual',\n    TRUE ~ primary_language\n  ))                                                     # Merge prim lang categories\n\n#test_df <- d %>% filter(is.na(state))                   # Check if duplicate exist\n\n\n\n# After googling organzation missing city/state\n\n# base \nd[d$publication_name == 'Grist', ]$city = 'Seattle'\nd[d$publication_name == 'Grist', ]$state = 'WA'\n\n\n# dplyr case_when\nd <- d %>% \n  mutate(\n    city = case_when(\n      publication_name == 'Haddam Now'          ~ 'Haddam-Killingworth',\n      publication_name == 'Indy Politics'       ~ 'Indianapolis',\n      publication_name == 'Midwest Energy News' ~ 'St. Paul',\n      publication_name == 'Payday Report'       ~ 'Pittsburgh',\n      publication_name == 'Political Wire'      ~ 'New York',\n      publication_name == 'RANGE Media'         ~ 'Seattle',\n      publication_name == 'Silicon Hills News'  ~ 'Austin',\n      publication_name == 'Southerly'           ~ 'Louisville',\n      publication_name == 'Truthout'            ~ 'Sacramento',\n      publication_name == 'Vngle'               ~ 'Atlanta',\n      TRUE                                      ~ city\n      ),\n    state = case_when(\n      publication_name == 'Haddam Now'          ~ 'CT',\n      publication_name == 'Indy Politics'       ~ 'IN',\n      publication_name == 'Midwest Energy News' ~ 'MN',\n      publication_name == 'Payday Report'       ~ 'PA',\n      publication_name == 'Political Wire'      ~ 'NY',\n      publication_name == 'RANGE Media'         ~ 'WA',\n      publication_name == 'Silicon Hills News'  ~ 'TX',\n      publication_name == 'Southerly'           ~ 'KY',\n      publication_name == 'Truthout'            ~ 'CA',\n      publication_name == 'Vngle'               ~ 'GA',\n      TRUE                                      ~ state\n    )) %>% \n  filter(!is.na(city))                                # Latina Lista's city not found\n\n\n\nPublication by state\n\n\npub_data <- d %>% \n  count(state) %>% \n  rbind(tibble(\n    state = c('AK', 'ND', 'WV'), \n    n = c(0, 0, 0))) %>%                                      # adding ND-AK-WV\n  left_join(tibble(\n    name = state.name, \n    state = state.abb)) %>%                                   # add all state name\n  replace_na(list(name = 'District of Columbia'))\n\n\n\n\n\nggplot() +\n  geom_col(\n    data = pub_data,\n    aes(n, fct_reorder(state, n)),\n    fill = '#421C52')+\n  labs(y='', x='', title = 'Publications by state')+\n  theme_light()\n\n\n\n\nHex map data\nMost of this code comes from the R Gallery. For more\ninformation, check this link\n\n\n# Download the Hexagones boundaries for US at geojson format here: https://team.carto.com/u/andrew/tables/andrew.us_states_hexgrid/public/map.\n\nhex_df_raw <- geojson_read('us_states_hexgrid.geojson',  what = 'sp') \n\nhex_df_raw@data <-  hex_df_raw@data %>%                               \n  mutate(google_name = gsub(' \\\\(United States\\\\)', '', google_name)) # tidy w/ broom\n\ndata <- tidy(hex_df_raw, region = 'google_name') %>%\n  left_join(pub_data, by=c('id'='name'))                              # merge datasets\n\n\ndata$bin <- cut(\n  data$n , \n  breaks=c(0, 5, 10, 15, 20, 25, 30, 35, \n           40, 45, 50, 55, 60, 65, Inf), \n  labels=c('0-5', '5-10', '11-15', '16-20', '21-25', \n           '26-30', '31-35','36-40', '41-45', '46-50', \n           '51-55', '56-60', '61-65', '66-70'), \n  include.lowest = TRUE )                                              # legend\n\n\nctrs <- cbind.data.frame(\n  data.frame(\n    gCentroid(\n      hex_df_raw, \n      byid=TRUE), \n    id=hex_df_raw@data$iso3166_2)) %>% \n  left_join(pub_data, by=c('id'='state'))                                    # labels\n\n\n\nFinal output\n\n\npaged_table(data)\n\n\n\n\n\nPlotting\n\n\nplot <- ggplot() +\n  geom_polygon(\n    data = data,\n    aes(x = long, y = lat, \n        group = group, fill = bin) , \n    size =0, alpha=0.9) +\n  geom_text(\n    data=ctrs, \n    aes(x=x, y=y, label=id), \n    color='white', size=4, fontface = 'bold') +\n  annotate(\n    'text', x=-70, y=28, color = '#f5f5f2',\n    label = 'Project OASIS\\nTidytuesday week 14',\n    hjust = 1, family = 'Roboto', fontface = 'italic')+\n  theme_void() +\n  scale_fill_manual( \n    values=mpal, \n    name  ='Number of organizations: state by state', \n    guide = guide_legend(\n      keyheight      = unit(3, units = 'mm'), \n      keywidth       = unit(12, units = 'mm'), \n      label.position = 'bottom', \n      title.position = 'top',\n      nrow           =1) \n  ) +\n  ggtitle('DIGITAL PUBLICATIONS') +\n  theme(\n    legend.position   = c(0.5, 0.85),\n    text              = element_text(color = '#f5f5f2', face = 'bold'),\n    plot.background   = element_rect(fill = '#43464B', color = NA), \n    panel.background  = element_rect(fill = '#43464B', color = NA), \n    legend.background = element_rect(fill = '#43464B', color = NA),\n    legend.title      = element_text(hjust = .5),\n    plot.title        = element_text(\n      size   = 22, \n      hjust  = 0.5, \n      family = 'Roboto',\n      color  = '#f5f5f2', \n      margin = margin(\n        b    = -0.1, \n        t    = 1, \n        l    = 2, \n        unit = 'cm')\n      )\n  )\n\nplot\n\n\n\n\n\n\n\n",
    "preview": "posts/2022-04-07-week-14/w14_dig_pub.jpeg",
    "last_modified": "2022-04-07T23:10:34-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-04-03-week-13/",
    "title": "week-13: College Sports",
    "description": "Exploring US college sports.",
    "author": [
      {
        "name": "Oumarou Diallo",
        "url": {}
      }
    ],
    "date": "2022-04-03",
    "categories": [],
    "contents": "\n\nContents\nSetup & Libraries\nDataset\nLoading\nExploring and wrangling\nFinal output\n\nPlotting\n\nSetup & Libraries\n\n\nknitr::opts_chunk$set(echo = TRUE)\nlibrary(tidyverse)\nlibrary(scales)\nlibrary(tidytuesdayR)\nlibrary(rmarkdown)\nlibrary(ggcharts)\nlibrary(hrbrthemes)\nhrbrthemes::import_roboto_condensed()\n\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(patchwork)\nfont_add_google('Bree Serif')\nshowtext_auto()\n# For more on showtext, see this [link](https://babichmorrowc.github.io/post/2019-10-11-google-fonts/) or this [link](https://cran.r-project.org/web/packages/showtext/vignettes/introduction.html)\n\n\n\nDataset\nLoading\n\n\ntt <- tt_load(\"2022-03-29\")\n\n\n\n    Downloading file 1 of 1: `sports.csv`\n\ndata <- tt$sports\n\n\n\nExploring and wrangling\n\n\n# Sports categories\ndata %>% \n  count(sports, sort = TRUE)  \n\n\n# A tibble: 38 × 2\n   sports                         n\n   <chr>                      <int>\n 1 Basketball                 10000\n 2 Volleyball                  9122\n 3 Soccer                      8647\n 4 Baseball                    8644\n 5 Softball                    8560\n 6 Golf                        7060\n 7 Tennis                      6418\n 8 Football                    5310\n 9 Track and Field, X-Country  4923\n10 All Track Combined          4870\n# … with 28 more rows\n\n\n\n# ***** Main plot data: total participants par sports category (Men + Women)\n\ndata_main_plot <- data %>% \n  select(sports, partic_men, partic_women) %>%                     # cols of interest\n  mutate_if(is.double, ~replace(., is.na(.), 0)) %>% \n  mutate(\n    partic_total = partic_men + partic_women,\n    sports       = case_when(\n      sports == 'Track and Field, X-Country' ~ 'TF & X-Country',\n      sports == 'All Track Combined'         ~ 'All Track Comb.',\n      sports == 'Track and Field, Outdoor'   ~ 'TF Outdoor',\n      sports == 'Track and Field, Indoor'    ~ 'TF Indoor',\n      sports == 'Swimming and Diving'        ~ 'Swim. & Diving',\n      sports == 'Synchronized Swimming'      ~ 'Sync. Swimming',\n      TRUE                                   ~ sports)              # Renaming to shorten categ names before plotting\n    ) %>% \n  group_by(sports) %>%\n  summarise(tot_part = sum(partic_total)) %>% \n  filter(tot_part > 0)\n\n\n# ***** By gender plot: top 5 sports  by gender\n\nby_gender_data <- data %>% \n  select(\n    sports, \n    partic_men, partic_women, \n    total_rev_menwomen, total_exp_menwomen) %>% \n  mutate_if(is.double, ~replace(., is.na(.), 0)) %>%\n  group_by(sports) %>% \n  summarise(\n    MEN   = sum(partic_men), \n    WOMEN = sum(partic_women),\n    rev   = sum(total_rev_menwomen),\n    exp   = sum(total_exp_menwomen)) %>% \n  mutate(tot = MEN + WOMEN) %>% \n  pivot_longer(\n    cols      = c(MEN, WOMEN),\n    names_to  = 'gender',\n    values_to = 'participants') %>% \n  mutate(col = case_when(\n    sports == 'Soccer' ~ 'yes', \n    TRUE               ~ 'no'))\n\n\n\n\n# ***** Cashflow plot: top 5 sports  by total revenue and expenditure\n\nexp_rev_data <- data %>% \n  select(\n    sports,\n    partic_men, partic_women, \n    total_rev_menwomen, total_exp_menwomen) %>% \n  mutate_if(is.double, ~replace(., is.na(.), 0)) %>%\n  group_by(sports) %>% \n  summarise(\n    REVENUE     = sum(total_rev_menwomen),\n    EXPENDITURE = sum(total_exp_menwomen)) %>% \n  pivot_longer(\n    cols      = c(REVENUE, EXPENDITURE),\n    names_to  = 'cashflow',\n    values_to = 'amount') %>% \n  mutate(amount = amount / 1000000000)\n\n\n\nFinal output\n\n\npaged_table(data_main_plot)\n\n\n\n\n\n\n\npaged_table(by_gender_data)\n\n\n\n\n\n\n\npaged_table(exp_rev_data)\n\n\n\n\n\nPlotting\n\n\ntitle_main    <- \"EXPLORING COLLEGE SPORTS\"\n\nsubtitle_main <- \"<span style = 'color:black'> - Most students prefer **Combined Track & Field**, **Football**, and **Soccer** with more than <\/span><span style = 'color:black'>**(400,000)**<\/span> participants each.<br><span style = 'color:black'> -  **Soccer**<\/span><span style = 'color:black'> comes in **top 3** for women and **top 4** for men.<\/span><br><span style = 'color:black'> - Trends for **Revenues** & **Expenses** are similar accross sports.<\/span>\"\n\nplot_1 <- data_main_plot %>% \n  ggplot(aes(\n    tot_part,\n    fct_reorder(sports, tot_part))\n    )+\n  geom_col(fill = '#a9a9a9', alpha = .9)+\n  geom_text(\n    aes(label = tot_part),  \n    hjust=-.2, fontface = 'bold', size = 6, color = 'black')+\n  scale_x_continuous(\n    limits = c(0, 700000),\n    breaks = c(0, 200000, 400000, 600000),\n    labels = c('0', '200K', '400K', '600K'),\n    position = 'top',\n    expand = c(0, 0)\n    )+\n  labs(x        = '', \n       y        = '',\n       title    = title_main,\n       subtitle = subtitle_main,\n       caption  = 'Data: Tidytuesday W13')+\n  theme(\n    panel.background    = element_blank(),\n    plot.background     = element_rect(fill = '#e1d8e8', color = '#e1d8e8'),\n    panel.grid          = element_blank(),\n    axis.ticks          = element_blank(),\n    axis.text.y         = element_text(face = 'bold', size = 14, color = '#010203'),\n    axis.text.x         = element_text(face='italic', size = 14),\n    plot.title.position = 'plot',\n    plot.title          = element_markdown(family = 'Bree Serif', size = 20, color = '#002a77'),\n    plot.subtitle       = element_markdown(margin = margin(0, 0, .4, 0, unit = 'cm'), size = 12),\n    plot.margin         = unit(c(5, 1, 0, 0), \"pt\")\n  )\n\n\nplot_2 <- by_gender_data %>% \n  bar_chart(sports, participants, facet = gender, top_n = 5, fill = col)+\n  scale_y_continuous(\n    name   = '',\n    labels = scales::comma_format(),\n    breaks = c(0, 200000, 400000))+\n  scale_fill_manual(values = c('darkgrey', '#DB804E'))+\n  labs(\n    x     = '', \n    title = 'TOP 5: PARTICIPATION BY GENDER')+\n  theme_ggcharts(ticks = 'X')+\n  theme(\n    legend.position = 'none',\n    plot.title      = element_text(hjust = .5, face = 'bold'),\n    axis.text       = element_text(face = 'bold'),\n    plot.background = element_rect(fill = '#C1C1C1', color = '#C1C1C1'))\n\n\n\n\nplot_3 <- exp_rev_data  %>% \n  bar_chart(sports, amount, facet = cashflow, top_n = 5, fill = cashflow)+\n  scale_y_continuous(\n    name   = '',\n    labels = scales::comma_format())+\n  scale_fill_manual(values = c('#7d2454', '#304E57'))+\n  labs(\n    x     = '', \n    title = 'TOP 5: REVENUE & EXPENDITURE (Million USD)')+\n  theme_ggcharts(ticks = 'X')+\n  theme(\n    legend.position = 'none',\n    plot.title = element_text(hjust = .5, face = 'bold'),\n    axis.text = element_text(face = 'bold'),\n    plot.background = element_rect(fill = '#C1C1C1', color = '#C1C1C1'))\n\n\n\n\n\npp <- plot_1 + \n  inset_element(plot_2, 0.35, 0.01, .98, .4) + # left-bottom-right-top\n  inset_element(plot_3, 0.35, 0.403, .98, .75) \npp\n\n\n\n\n\n\n\n",
    "preview": "posts/2022-04-03-week-13/sports.jpeg",
    "last_modified": "2022-04-04T17:54:47-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-29-week-12/",
    "title": "Week 12: Baby names",
    "description": "R Script for Tidytuesday Week-12.",
    "author": [
      {
        "name": "Oumarou Diallo",
        "url": {}
      }
    ],
    "date": "2022-03-24",
    "categories": [],
    "contents": "\n\nContents\nSetup & Libraries\nDataset\nLoading\nExploring and wrangling\nFinal output\n\nPlotting\n\nSetup & Libraries\n\n\nknitr::opts_chunk$set(echo = TRUE)\nlibrary(tidyverse)\nlibrary(tidytuesdayR)\nlibrary(rmarkdown)\nlibrary(ggcharts)\nlibrary(hrbrthemes)\nhrbrthemes::import_roboto_condensed()\nlibrary(scales)\nlibrary(MetBrewer)\nlibrary(showtext)\n\nshowtext_auto()\nfont_add_google(\"Quicksand\")\nfont_add_google(\"Fira Sans Condensed\")\ncol1 <- met.brewer(\"Lakota\", 6)[1]\ncol2 <- met.brewer(\"Tsimshian\", 7)[3]\n\n\n\nDataset\nLoading\n\n\ntt <- tt_load(\"2022-03-22\")\n\n\n\n    Downloading file 1 of 8: `applicants.csv`\n    Downloading file 2 of 8: `babynames.csv`\n    Downloading file 3 of 8: `births.csv`\n    Downloading file 4 of 8: `lifetables.csv`\n    Downloading file 5 of 8: `maorinames.csv`\n    Downloading file 6 of 8: `nz_births.csv`\n    Downloading file 7 of 8: `nz_lifetables.csv`\n    Downloading file 8 of 8: `nz_names.csv`\n\nExploring and wrangling\n\n\ndata <- tt$babynames %>% \n  filter(year == 2017) %>% \n  group_by(name, sex) %>% \n  summarise(n = sum(n)) %>% \n  mutate(\n    sex = case_when(\n      sex == 'M' ~ 'BOYS',\n      TRUE       ~ 'GIRLS')\n    )\n\n\n\nFinal output\n\n\npaged_table(data)\n\n\n\n\n\nPlotting\n\n\nplot_w12 <- data  %>% \n  bar_chart(\n    x     = name, \n    y     = n, \n    facet = sex, \n    top_n = 10) +\n  theme_ng()+\n  labs(x     ='', \n       y     = '', \n       title = 'BABYNAMES IN 2017\\nPopularity of names by gender') +\n  theme(\n     panel.grid.major.x = element_line(\n                               color = 'white', \n                               size  = .01),\n     panel.grid.minor.x = element_blank(),\n     panel.grid.major.y = element_blank(),\n     panel.grid.minor.y = element_blank(),\n     plot.title         = element_text(\n                               family = \"Quicksand\",   face = 'bold', \n                               size = 30,              hjust= .5, \n                               color = col1),\n     plot.subtitle      = element_text(family = \"Fira Sans Condensed\"),\n     axis.text.x        = element_text(\n                                family = \"Optima\", \n                                color = 'white',\n                                face = 'italic'),\n     axis.text.y        = element_text(\n                                family = \"Luminari\",  color = 'dodgerblue', \n                                size = 20,            face  = 'bold'),\n     strip.text         = element_text(\n                                color = 'white', \n                                size =20)\n     )\n  \n\nplot_w12\n\n\n\n\n\n\n\n",
    "preview": "posts/2022-03-29-week-12/mybaby.jpeg",
    "last_modified": "2022-04-04T18:19:37-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-28-week-11/",
    "title": "Week 11: CRAN/BIOC Vignettes",
    "description": "R Script for Tidytuesday Week-11.",
    "author": [
      {
        "name": "Oumarou Diallo",
        "url": {}
      }
    ],
    "date": "2022-03-17",
    "categories": [],
    "contents": "\n\nContents\nSetup & Libraries\nDataset\nLoading\nExploring and wrangling:\nFinal output\n\nPlotting\n\nSetup & Libraries\n\n\nknitr::opts_chunk$set(echo = TRUE)\nlibrary(tidyverse)\nlibrary(tidytuesdayR)\nlibrary(lubridate)\nlibrary(extrafont)\nlibrary(ggtext)\nlibrary(showtext)\nlibrary(MetBrewer)\nlibrary(rmarkdown)\n\n\n\nDataset\nLoading\n\n\ntt <- tt_load(\"2022-03-15\")\n\n\n\n    Downloading file 1 of 2: `cran.csv`\n    Downloading file 2 of 2: `bioc.csv`\n\nExploring and wrangling:\n\n\ndata <- tt$cran %>%\n  mutate(\n    date = case_when(                                 # code chunk from @tanya_shapiro\n      grepl(\"^[[:digit:]]\",date)   ~ as.Date(date), \n      TRUE                         ~ as.Date(\n                                        substr(\n                                          date, 5, \n                                          nchar(date)\n                                          ), \n                                        '%b %d %H:%M:%S %Y')  \n      ),\n    yearmonth = ym(format(date, \"%Y-%m\")),\n    year      = year(date)\n    ) %>% \n  group_by(package) %>% \n  mutate(dur = max(year) - min(year),\n         n   = length(version)\n    ) %>% \n  filter(dur >0) %>% \n  mutate(avg = n / dur) %>% \n  arrange(desc(avg)) %>% \n  group_by(package) %>% \n  filter(row_number() == 1) %>% \n  head(50)\n\n\n\nFinal output\n\n\npaged_table(data)\n\n\n\n\n\nPlotting\n\n\nplot_w11 <- data  %>% \n  ggplot(\n    aes(avg, \n        fct_reorder(package, avg))\n    ) +\n  geom_point(\n    color = 'cyan', \n    size  = 4\n    )+\n  geom_segment(\n    aes(\n      x   = 0,        xend = avg, \n      y   = package,  yend = package) , \n    size  =1, \n    color = 'cyan', \n    alpha = .3\n    )+\n  scale_x_continuous(\n    limits = c(0, 21), \n    expand = c(0, 0)\n    )+\n  labs(\n    y ='', x = '',\n    title    = 'CRAN PACKAGES',\n    subtitle = 'Yearly Average Number of Versions: Top 50 packages'\n    ) +\n  theme_light()+\n  theme(\n    plot.background  = element_rect(fill = \"#141227\"),\n    panel.background = element_rect(fill = \"#141227\"),\n    panel.grid       = element_blank(),\n    axis.line        = element_blank(),\n    axis.ticks.y     = element_blank(),\n    axis.ticks.x     = element_blank(),\n    axis.text.y      = element_text(color = 'white', hjust=0, face = 'bold'),\n    axis.text.x      = element_text(color = 'white'),\n    panel.border     = element_blank(),\n    plot.margin      = unit(c(0, 2, 0, 0), 'cm'),\n    plot.title       = element_text(\n                              face  = \"bold\",\n                              size  = 24, \n                              hjust = 0, \n                              color = 'white'),\n    plot.subtitle   = element_text(\n                              face  = \"bold\",\n                              size  = 16, \n                              hjust = 0, \n                              color = \"#c33c70\")\n    )\n\nplot_w11\n\n\n\n\n\n\n\n",
    "preview": "posts/2022-03-28-week-11/rpkg2.png",
    "last_modified": "2022-04-04T18:19:01-07:00",
    "input_file": {}
  }
]
